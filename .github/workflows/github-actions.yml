name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ossrh
          server-username: OSSRH_JIRA_USERNAME
          server-password: OSSRH_JIRA_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY_ASCII }}
          gpg-passphrase: GPG_PASSPHRASE

#      - name: Build with Maven
#        run: mvn clean test

      - run: export AWS_ACCESS_KEY_ID=ThisIsTheAccessKeyId
      - run: export AWS_SECRET_ACCESS_KEY=ThisIsRequiredButNotUsed

      - name: Setup Docker
        run: |
          docker pull amazon/dynamodb-local
          docker run -d -p 8000:8000 amazon/dynamodb-local
          docker ps -a

      - run: echo "$AWS_ACCESS_KEY_ID"

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Semantic Release
        run: |
          npm install -g @conveyal/maven-semantic-release semantic-release
          semantic-release --prepare @conveyal/maven-semantic-release --publish @semantic-release/github,@conveyal/maven-semantic-release --verify-conditions @semantic-release/github,@conveyal/maven-semantic-release --verify-release @conveyal/maven-semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
          OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}